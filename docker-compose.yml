version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list" ]
      interval: 10s
      retries: 5
      start_period: 20s
    command: >
      bash -c "
        /etc/confluent/docker/run &
        sleep 10 &&
        kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic request-topic --partitions 1 --replication-factor 1 &&
        kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic response-topic --partitions 1 --replication-factor 1 &&
        wait
      "

  authentication-service:
    image: authentication-service:1.0
    container_name: authentication-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
        - "7002:7002"

  transaction-service:
    image: transaction-service:1.0
    container_name: transaction-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "7001:7001"